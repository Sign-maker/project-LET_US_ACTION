{"version":3,"file":"static/js/454.e817f4e5.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.jsx","pages/SigninPage/SigninPage.jsx","webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.css?9658"],"sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { HiOutlineEyeOff, HiOutlineEye } from 'react-icons/hi';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { useAuth } from 'hooks/useAuth';\nimport { ClipLoader } from 'react-spinners';\nimport css from './AuthForm.module.css';\nimport {\n  toastFulfilled,\n  toastRejected,\n} from 'components/servises/UserNotification';\n\nconst AuthForm = () => {\n  const { logIn, register } = useAuth();\n\n  const location = useLocation();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [submitLoading, setSubmitLoading] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleConfirmPasswordVisibility = () => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n\n  const isSignUp = location.pathname === '/signup';\n\n  const initialValues = isSignUp\n    ? { email: '', password: '', confirmPassword: '' }\n    : { email: '', password: '' };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Email is required'),\n    password: Yup.string()\n      .min(8, 'Password must be at least 8 characters')\n      .max(64, 'Password must be no more than 64 characters')\n      .required('Password is required'),\n    ...(isSignUp && {\n      confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Confirm password is required'),\n    }),\n  });\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      setSubmitLoading(true);\n      const { email, password } = values;\n      const action = isSignUp ? register : logIn;\n      await action({ email, password });\n\n      if (isSignUp) {\n        resetForm();\n        toastFulfilled('Registration successful!');\n      } else {\n        toastFulfilled('You have successfully logged into your account!');\n      }\n    } catch (error) {\n      if (error.message) {\n        toastRejected('Something wrong occurred');\n      }\n\n      toastRejected(error);\n    } finally {\n      setSubmitting(false);\n      setSubmitLoading(false);\n    }\n  };\n\n  return (\n    <div className={css.signinContainer}>\n      <h2 className={css.title}>{isSignUp ? 'Sign Up' : 'Sign In'}</h2>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n        validateOnBlur={true}\n        validateOnChange={true}\n      >\n        {formik => (\n          <Form className={css.form}>\n            <div className={css.inputContainer}>\n              <label className={css.label} htmlFor=\"email\">\n                Enter your email\n              </label>\n              <Field\n                className={`${css.input} ${\n                  formik.errors.email && formik.touched.email\n                    ? css.inputError\n                    : ''\n                }`}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"E-mail\"\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className={css.errorMessage}\n              />\n            </div>\n\n            <div className={css.inputContainer}>\n              <label className={css.label} htmlFor=\"password\">\n                Enter your password\n              </label>\n              <div className={css.fieldContainer}>\n                <Field\n                  className={`${css.input} ${\n                    formik.errors.password && formik.touched.password\n                      ? css.inputError\n                      : ''\n                  }`}\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <div\n                  className={css.passwordIconContainer}\n                  onClick={togglePasswordVisibility}\n                >\n                  {showPassword ? (\n                    <HiOutlineEye className={css.passwordIcon} />\n                  ) : (\n                    <HiOutlineEyeOff className={css.passwordIcon} />\n                  )}\n                </div>\n              </div>\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className={css.errorMessage}\n              />\n            </div>\n\n            {isSignUp && (\n              <div className={css.inputContainer}>\n                <label className={css.label} htmlFor=\"confirmPassword\">\n                  Repeat your password\n                </label>\n                <div className={css.fieldContainer}>\n                  <Field\n                    className={`${css.input} ${\n                      formik.errors.confirmPassword &&\n                      formik.touched.confirmPassword\n                        ? css.inputError\n                        : ''\n                    }`}\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    name=\"confirmPassword\"\n                    placeholder=\"Repeat Password\"\n                  />\n                  <div\n                    className={css.passwordIconContainer}\n                    onClick={toggleConfirmPasswordVisibility}\n                  >\n                    {showConfirmPassword ? (\n                      <HiOutlineEye className={css.passwordIcon} />\n                    ) : (\n                      <HiOutlineEyeOff className={css.passwordIcon} />\n                    )}\n                  </div>\n                </div>\n                <ErrorMessage\n                  name=\"confirmPassword\"\n                  component=\"div\"\n                  className={css.errorMessage}\n                />\n              </div>\n            )}\n\n            <button\n              className={css.button}\n              type=\"submit\"\n              disabled={formik.isSubmitting || submitLoading}\n            >\n              {submitLoading ? (\n                <ClipLoader size={20} color=\"#ffffff\" loading={submitLoading} />\n              ) : isSignUp ? (\n                'Sign Up'\n              ) : (\n                'Sign In'\n              )}\n            </button>\n          </Form>\n        )}\n      </Formik>\n      <NavLink to={isSignUp ? '/signin' : '/signup'} className={css.link}>\n        {isSignUp ? 'Sign In' : 'Sign Up'}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport AuthForm from 'components/AuthForm/AuthForm';\nimport css from '../../components/AuthForm/AuthForm.module.css';\n\nconst SigninPage = () => {\n  return (\n    <section className={css.AuthFormSection}>\n      <div className={`${css.div} container`}>\n        <AuthForm />\n      </div>\n    </section>\n  );\n};\n\nexport default SigninPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"AuthFormSection\":\"AuthForm_AuthFormSection__Su+Kz\",\"div\":\"AuthForm_div__l-S9-\",\"signinContainer\":\"AuthForm_signinContainer__C+Gai\",\"title\":\"AuthForm_title__nrVeh\",\"form\":\"AuthForm_form__N+Fyz\",\"label\":\"AuthForm_label__-RWhN\",\"fieldContainer\":\"AuthForm_fieldContainer__txbFE\",\"input\":\"AuthForm_input__dB7h2\",\"passwordIconContainer\":\"AuthForm_passwordIconContainer__J7eew\",\"inputContainer\":\"AuthForm_inputContainer__44gmQ\",\"passwordIcon\":\"AuthForm_passwordIcon__eKLRo\",\"button\":\"AuthForm_button__+RFEI\",\"link\":\"AuthForm_link__3I+HY\",\"errorMessage\":\"AuthForm_errorMessage__poTln\",\"inputError\":\"AuthForm_inputError__pMkyj\"};"],"names":["_useAuth","useAuth","logIn","register","location","useLocation","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showConfirmPassword","setShowConfirmPassword","_useState5","_useState6","submitLoading","setSubmitLoading","togglePasswordVisibility","toggleConfirmPasswordVisibility","isSignUp","pathname","initialValues","email","password","confirmPassword","validationSchema","Yup","_objectSpread","required","min","max","oneOf","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","values","_ref","setSubmitting","resetForm","action","_context","prev","next","toastFulfilled","t0","message","toastRejected","finish","stop","_x","_x2","apply","arguments","_jsxs","className","css","children","_jsx","Formik","onSubmit","validateOnBlur","validateOnChange","formik","Form","htmlFor","Field","concat","errors","touched","type","name","placeholder","ErrorMessage","component","onClick","HiOutlineEye","HiOutlineEyeOff","disabled","isSubmitting","ClipLoader","size","color","loading","NavLink","to","AuthForm"],"sourceRoot":""}